INFO:__main__:Reading the dataset: fish instance-recognition
INFO:__main__:model: Transformer(
  (encoder): Encoder(
    (layers): ModuleList(
      (0-3): 4 x EncoderLayer(
        (self_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (feed_forward): FeedForward(
          (fc1): Linear(in_features=2046, out_features=128, bias=True)
          (fc2): Linear(in_features=128, out_features=2046, bias=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
        (norm1): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.2, inplace=False)
        (dropout2): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (decoder): Decoder(
    (layers): ModuleList(
      (0-3): 4 x DecoderLayer(
        (self_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (cross_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (feed_forward): FeedForward(
          (fc1): Linear(in_features=2046, out_features=128, bias=True)
          (fc2): Linear(in_features=128, out_features=2046, bias=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
        (norm1): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.2, inplace=False)
        (dropout2): Dropout(p=0.2, inplace=False)
        (dropout3): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (fc): Linear(in_features=2046, out_features=2, bias=True)
)
INFO:__main__:Training the network
INFO:train:Epoch 1/100 	Train Loss: 0.7137, Train Acc: 0.7027	 Val Loss: 0.5644, Val Acc: 0.7679
INFO:train:Epoch 2/100 	Train Loss: 0.5322, Train Acc: 0.7658	 Val Loss: 0.5731, Val Acc: 0.8036
INFO:train:Epoch 3/100 	Train Loss: 0.4108, Train Acc: 0.8514	 Val Loss: 0.5174, Val Acc: 0.8036
INFO:train:Epoch 4/100 	Train Loss: 0.3232, Train Acc: 0.9414	 Val Loss: 0.4376, Val Acc: 0.8036
INFO:train:Epoch 5/100 	Train Loss: 0.2943, Train Acc: 0.9505	 Val Loss: 0.5090, Val Acc: 0.7857
INFO:train:Epoch 6/100 	Train Loss: 0.2682, Train Acc: 0.9820	 Val Loss: 0.4526, Val Acc: 0.8393
INFO:train:Epoch 7/100 	Train Loss: 0.2566, Train Acc: 0.9910	 Val Loss: 0.4481, Val Acc: 0.8393
INFO:train:Epoch 8/100 	Train Loss: 0.2455, Train Acc: 0.9820	 Val Loss: 0.5251, Val Acc: 0.8214
INFO:train:Epoch 9/100 	Train Loss: 0.2325, Train Acc: 0.9955	 Val Loss: 0.4760, Val Acc: 0.8214
INFO:train:Epoch 10/100 	Train Loss: 0.2283, Train Acc: 1.0000	 Val Loss: 0.5065, Val Acc: 0.8393
INFO:train:Epoch 11/100 	Train Loss: 0.2248, Train Acc: 1.0000	 Val Loss: 0.5359, Val Acc: 0.8214
INFO:train:Epoch 12/100 	Train Loss: 0.2220, Train Acc: 1.0000	 Val Loss: 0.5247, Val Acc: 0.8393
INFO:train:Epoch 13/100 	Train Loss: 0.2173, Train Acc: 1.0000	 Val Loss: 0.5088, Val Acc: 0.8036
INFO:train:Epoch 14/100 	Train Loss: 0.2230, Train Acc: 0.9955	 Val Loss: 0.5927, Val Acc: 0.8214
INFO:train:Epoch 15/100 	Train Loss: 0.2159, Train Acc: 1.0000	 Val Loss: 0.5063, Val Acc: 0.8214
INFO:train:Epoch 16/100 	Train Loss: 0.2155, Train Acc: 1.0000	 Val Loss: 0.5521, Val Acc: 0.8214
INFO:train:Epoch 17/100 	Train Loss: 0.2147, Train Acc: 1.0000	 Val Loss: 0.5259, Val Acc: 0.8036
INFO:train:Epoch 18/100 	Train Loss: 0.2163, Train Acc: 1.0000	 Val Loss: 0.4902, Val Acc: 0.8571
INFO:train:Epoch 19/100 	Train Loss: 0.2170, Train Acc: 1.0000	 Val Loss: 0.5952, Val Acc: 0.7857
INFO:train:Epoch 20/100 	Train Loss: 0.2148, Train Acc: 1.0000	 Val Loss: 0.5157, Val Acc: 0.8393
INFO:train:Epoch 21/100 	Train Loss: 0.2152, Train Acc: 1.0000	 Val Loss: 0.5625, Val Acc: 0.8214
INFO:train:Epoch 22/100 	Train Loss: 0.2190, Train Acc: 0.9955	 Val Loss: 0.5318, Val Acc: 0.8393
INFO:train:Epoch 23/100 	Train Loss: 0.2136, Train Acc: 1.0000	 Val Loss: 0.5030, Val Acc: 0.8393
INFO:train:Epoch 24/100 	Train Loss: 0.2124, Train Acc: 1.0000	 Val Loss: 0.5671, Val Acc: 0.8214
INFO:train:Epoch 25/100 	Train Loss: 0.2123, Train Acc: 1.0000	 Val Loss: 0.5286, Val Acc: 0.8036
INFO:train:Epoch 26/100 	Train Loss: 0.2092, Train Acc: 1.0000	 Val Loss: 0.4949, Val Acc: 0.8214
INFO:train:Epoch 27/100 	Train Loss: 0.2119, Train Acc: 1.0000	 Val Loss: 0.6141, Val Acc: 0.8036
INFO:train:Epoch 28/100 	Train Loss: 0.2125, Train Acc: 1.0000	 Val Loss: 0.4939, Val Acc: 0.8036
INFO:train:Epoch 29/100 	Train Loss: 0.2115, Train Acc: 1.0000	 Val Loss: 0.5270, Val Acc: 0.8214
INFO:train:Epoch 30/100 	Train Loss: 0.2113, Train Acc: 1.0000	 Val Loss: 0.5666, Val Acc: 0.8036
INFO:train:Epoch 31/100 	Train Loss: 0.2092, Train Acc: 1.0000	 Val Loss: 0.5612, Val Acc: 0.8036
INFO:train:Epoch 32/100 	Train Loss: 0.2098, Train Acc: 1.0000	 Val Loss: 0.5904, Val Acc: 0.8036
INFO:train:Early stopping triggered after 32 epochs
INFO:plot:Saving attention map to: figures/model_accuracy.png
INFO:__main__:Total time taken to train the model: 47.35s
INFO:train:train got 64 / 64 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:train:train got 64 / 64 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:train:train got 64 / 64 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:train:train got 30 / 30 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:train:Total time taken evaluate on train set the model: 0.72s
INFO:train:validation got 44 / 56 correct, accuracy: 0.7857142857142857
INFO:plot:Saving cofusion matrix map to: figures/validation_confusion_matrix.png
INFO:train:Total time taken evaluate on validation set the model: 0.29s
INFO:plot:Saving attention map to: figures/encoder_attention_map.png
INFO:plot:Saving attention map to: figures/decoder_attention_map.png
