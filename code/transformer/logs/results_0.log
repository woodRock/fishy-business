INFO:__main__:Reading the dataset: fish instance-recognition
INFO:__main__:model: Transformer(
  (encoder): Encoder(
    (layers): ModuleList(
      (0-3): 4 x EncoderLayer(
        (self_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (feed_forward): FeedForward(
          (fc1): Linear(in_features=2046, out_features=128, bias=True)
          (fc2): Linear(in_features=128, out_features=2046, bias=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
        (norm1): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.2, inplace=False)
        (dropout2): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (decoder): Decoder(
    (layers): ModuleList(
      (0-3): 4 x DecoderLayer(
        (self_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (cross_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (feed_forward): FeedForward(
          (fc1): Linear(in_features=2046, out_features=128, bias=True)
          (fc2): Linear(in_features=128, out_features=2046, bias=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
        (norm1): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.2, inplace=False)
        (dropout2): Dropout(p=0.2, inplace=False)
        (dropout3): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (fc): Linear(in_features=2046, out_features=2, bias=True)
)
INFO:__main__:Training the network
INFO:train:Epoch 1/100 	Train Loss: 0.3743, Train Balanced Acc: 0.5113	 Val Loss: 0.3635, Val Balanced Acc: 0.5000
INFO:train:Epoch 2/100 	Train Loss: 0.3127, Train Balanced Acc: 0.4995	 Val Loss: 0.3461, Val Balanced Acc: 0.5000
INFO:train:Epoch 3/100 	Train Loss: 0.3054, Train Balanced Acc: 0.5157	 Val Loss: 0.3254, Val Balanced Acc: 0.5000
INFO:train:Epoch 4/100 	Train Loss: 0.3030, Train Balanced Acc: 0.5104	 Val Loss: 0.3278, Val Balanced Acc: 0.5000
INFO:train:Epoch 5/100 	Train Loss: 0.2987, Train Balanced Acc: 0.5174	 Val Loss: 0.3253, Val Balanced Acc: 0.4969
INFO:train:Epoch 6/100 	Train Loss: 0.3014, Train Balanced Acc: 0.5273	 Val Loss: 0.3316, Val Balanced Acc: 0.4980
INFO:train:Epoch 7/100 	Train Loss: 0.2954, Train Balanced Acc: 0.5104	 Val Loss: 0.3184, Val Balanced Acc: 0.5000
INFO:train:Epoch 8/100 	Train Loss: 0.2883, Train Balanced Acc: 0.5159	 Val Loss: 0.3228, Val Balanced Acc: 0.4980
INFO:train:Epoch 9/100 	Train Loss: 0.2891, Train Balanced Acc: 0.5452	 Val Loss: 0.3230, Val Balanced Acc: 0.4990
INFO:train:Epoch 10/100 	Train Loss: 0.2878, Train Balanced Acc: 0.5384	 Val Loss: 0.3344, Val Balanced Acc: 0.5176
