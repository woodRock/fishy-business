INFO:__main__:Reading the dataset: fish instance-recognition
INFO:__main__:model: Transformer(
  (encoder): Encoder(
    (layers): ModuleList(
      (0-3): 4 x EncoderLayer(
        (self_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (feed_forward): FeedForward(
          (fc1): Linear(in_features=2046, out_features=128, bias=True)
          (fc2): Linear(in_features=128, out_features=2046, bias=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
        (norm1): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.2, inplace=False)
        (dropout2): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (decoder): Decoder(
    (layers): ModuleList(
      (0-3): 4 x DecoderLayer(
        (self_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (cross_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (feed_forward): FeedForward(
          (fc1): Linear(in_features=2046, out_features=128, bias=True)
          (fc2): Linear(in_features=128, out_features=2046, bias=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
        (norm1): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.2, inplace=False)
        (dropout2): Dropout(p=0.2, inplace=False)
        (dropout3): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (fc): Linear(in_features=2046, out_features=2, bias=True)
)
INFO:__main__:Training the network
INFO:train:Epoch 1/1000 	Train Loss: 3.5663, Train Acc: 0.5270	 Val Loss: 7.1494, Val Acc: 0.4286
INFO:train:Epoch 2/1000 	Train Loss: 3.0341, Train Acc: 0.4640	 Val Loss: 1.0095, Val Acc: 0.6607
INFO:train:Epoch 3/1000 	Train Loss: 0.8635, Train Acc: 0.6351	 Val Loss: 1.3716, Val Acc: 0.5714
INFO:train:Epoch 4/1000 	Train Loss: 0.8034, Train Acc: 0.6171	 Val Loss: 0.7954, Val Acc: 0.7143
INFO:train:Epoch 5/1000 	Train Loss: 0.7757, Train Acc: 0.6486	 Val Loss: 0.6991, Val Acc: 0.6607
INFO:train:Epoch 6/1000 	Train Loss: 0.5556, Train Acc: 0.7703	 Val Loss: 1.0136, Val Acc: 0.6964
INFO:train:Epoch 7/1000 	Train Loss: 0.5702, Train Acc: 0.7297	 Val Loss: 0.6617, Val Acc: 0.7857
INFO:train:Epoch 8/1000 	Train Loss: 0.4338, Train Acc: 0.8514	 Val Loss: 1.2189, Val Acc: 0.6071
INFO:train:Epoch 9/1000 	Train Loss: 0.4974, Train Acc: 0.8378	 Val Loss: 1.0597, Val Acc: 0.7321
INFO:train:Epoch 10/1000 	Train Loss: 0.5268, Train Acc: 0.8333	 Val Loss: 0.7432, Val Acc: 0.7500
INFO:train:Epoch 11/1000 	Train Loss: 0.4500, Train Acc: 0.8829	 Val Loss: 0.8842, Val Acc: 0.6786
INFO:train:Epoch 12/1000 	Train Loss: 0.3078, Train Acc: 0.9459	 Val Loss: 0.8468, Val Acc: 0.6250
INFO:train:Epoch 13/1000 	Train Loss: 0.2974, Train Acc: 0.9505	 Val Loss: 0.7393, Val Acc: 0.6964
INFO:train:Epoch 14/1000 	Train Loss: 0.2873, Train Acc: 0.9640	 Val Loss: 0.7244, Val Acc: 0.7321
INFO:train:Epoch 15/1000 	Train Loss: 0.2673, Train Acc: 0.9820	 Val Loss: 0.8984, Val Acc: 0.6786
INFO:train:Epoch 16/1000 	Train Loss: 0.2417, Train Acc: 0.9910	 Val Loss: 0.8917, Val Acc: 0.6429
INFO:train:Epoch 17/1000 	Train Loss: 0.2334, Train Acc: 0.9865	 Val Loss: 0.7672, Val Acc: 0.7500
INFO:train:Epoch 18/1000 	Train Loss: 0.2296, Train Acc: 1.0000	 Val Loss: 0.7405, Val Acc: 0.7321
INFO:train:Epoch 19/1000 	Train Loss: 0.2268, Train Acc: 1.0000	 Val Loss: 0.8012, Val Acc: 0.7143
INFO:train:Epoch 20/1000 	Train Loss: 0.2282, Train Acc: 0.9955	 Val Loss: 0.8024, Val Acc: 0.6964
INFO:train:Epoch 21/1000 	Train Loss: 0.2215, Train Acc: 1.0000	 Val Loss: 0.7815, Val Acc: 0.7143
INFO:train:Epoch 22/1000 	Train Loss: 0.2220, Train Acc: 1.0000	 Val Loss: 0.8182, Val Acc: 0.6786
INFO:train:Epoch 23/1000 	Train Loss: 0.2156, Train Acc: 1.0000	 Val Loss: 0.7856, Val Acc: 0.6964
INFO:train:Epoch 24/1000 	Train Loss: 0.2175, Train Acc: 1.0000	 Val Loss: 0.7230, Val Acc: 0.7143
INFO:train:Epoch 25/1000 	Train Loss: 0.2180, Train Acc: 1.0000	 Val Loss: 0.6964, Val Acc: 0.7143
INFO:train:Epoch 26/1000 	Train Loss: 0.2164, Train Acc: 1.0000	 Val Loss: 0.7640, Val Acc: 0.6786
INFO:train:Epoch 27/1000 	Train Loss: 0.2143, Train Acc: 1.0000	 Val Loss: 0.7427, Val Acc: 0.6964
INFO:train:Epoch 28/1000 	Train Loss: 0.2144, Train Acc: 1.0000	 Val Loss: 0.7281, Val Acc: 0.6964
INFO:train:Epoch 29/1000 	Train Loss: 0.2137, Train Acc: 1.0000	 Val Loss: 0.6738, Val Acc: 0.7143
INFO:train:Epoch 30/1000 	Train Loss: 0.2140, Train Acc: 1.0000	 Val Loss: 0.7208, Val Acc: 0.6786
INFO:train:Early stopping triggered after 30 epochs
INFO:plot:Saving attention map to: figures/model_accuracy.png
INFO:__main__:Total time taken to train the model: 44.20s
INFO:train:train got 64 / 64 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:train:train got 64 / 64 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:train:train got 64 / 64 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:train:train got 30 / 30 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:train:Total time taken evaluate on train set the model: 0.82s
INFO:train:validation got 38 / 56 correct, accuracy: 0.6785714285714286
INFO:plot:Saving cofusion matrix map to: figures/validation_confusion_matrix.png
INFO:train:Total time taken evaluate on validation set the model: 0.20s
INFO:plot:Saving attention map to: figures/encoder_attention_map.png
INFO:plot:Saving attention map to: figures/decoder_attention_map.png
