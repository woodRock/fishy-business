INFO:__main__:Reading the dataset: fish instance-recognition
INFO:__main__:model: Transformer(
  (encoder): Encoder(
    (layers): ModuleList(
      (0-3): 4 x EncoderLayer(
        (self_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (feed_forward): FeedForward(
          (fc1): Linear(in_features=2046, out_features=128, bias=True)
          (fc2): Linear(in_features=128, out_features=2046, bias=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
        (norm1): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.2, inplace=False)
        (dropout2): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (decoder): Decoder(
    (layers): ModuleList(
      (0-3): 4 x DecoderLayer(
        (self_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (cross_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (feed_forward): FeedForward(
          (fc1): Linear(in_features=2046, out_features=128, bias=True)
          (fc2): Linear(in_features=128, out_features=2046, bias=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
        (norm1): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.2, inplace=False)
        (dropout2): Dropout(p=0.2, inplace=False)
        (dropout3): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (fc): Linear(in_features=2046, out_features=2, bias=True)
)
INFO:__main__:Training the network
INFO:train:Epoch 1/1000 	Train Loss: 3.4165, Train Acc: 0.5045	 Val Loss: 4.6902, Val Acc: 0.4286
INFO:train:Epoch 2/1000 	Train Loss: 3.1248, Train Acc: 0.4910	 Val Loss: 1.7381, Val Acc: 0.5357
INFO:train:Epoch 3/1000 	Train Loss: 1.1815, Train Acc: 0.6126	 Val Loss: 1.6863, Val Acc: 0.5357
INFO:train:Epoch 4/1000 	Train Loss: 1.0534, Train Acc: 0.6351	 Val Loss: 1.2609, Val Acc: 0.5357
INFO:train:Epoch 5/1000 	Train Loss: 1.0847, Train Acc: 0.5991	 Val Loss: 1.0993, Val Acc: 0.5357
INFO:train:Epoch 6/1000 	Train Loss: 0.6669, Train Acc: 0.7117	 Val Loss: 1.2769, Val Acc: 0.5893
INFO:train:Epoch 7/1000 	Train Loss: 0.6064, Train Acc: 0.8018	 Val Loss: 0.9555, Val Acc: 0.6607
INFO:train:Epoch 8/1000 	Train Loss: 0.5341, Train Acc: 0.8153	 Val Loss: 0.7907, Val Acc: 0.6786
INFO:train:Epoch 9/1000 	Train Loss: 0.4378, Train Acc: 0.8739	 Val Loss: 0.7776, Val Acc: 0.6607
INFO:train:Epoch 10/1000 	Train Loss: 0.3943, Train Acc: 0.8784	 Val Loss: 0.8289, Val Acc: 0.6250
INFO:train:Epoch 11/1000 	Train Loss: 0.3586, Train Acc: 0.9234	 Val Loss: 0.8555, Val Acc: 0.6429
INFO:train:Epoch 12/1000 	Train Loss: 0.3237, Train Acc: 0.9414	 Val Loss: 0.8356, Val Acc: 0.6964
INFO:train:Epoch 13/1000 	Train Loss: 0.2670, Train Acc: 0.9820	 Val Loss: 0.8989, Val Acc: 0.6429
INFO:train:Epoch 14/1000 	Train Loss: 0.2897, Train Acc: 0.9775	 Val Loss: 0.8957, Val Acc: 0.5714
INFO:train:Epoch 15/1000 	Train Loss: 0.2586, Train Acc: 0.9865	 Val Loss: 0.7799, Val Acc: 0.6964
INFO:train:Epoch 16/1000 	Train Loss: 0.2576, Train Acc: 0.9865	 Val Loss: 0.7873, Val Acc: 0.6964
INFO:train:Epoch 17/1000 	Train Loss: 0.2374, Train Acc: 0.9955	 Val Loss: 0.8253, Val Acc: 0.6429
INFO:train:Epoch 18/1000 	Train Loss: 0.2439, Train Acc: 0.9910	 Val Loss: 0.7954, Val Acc: 0.6786
INFO:train:Epoch 19/1000 	Train Loss: 0.2460, Train Acc: 0.9865	 Val Loss: 0.7794, Val Acc: 0.6607
INFO:train:Epoch 20/1000 	Train Loss: 0.2454, Train Acc: 0.9910	 Val Loss: 0.8975, Val Acc: 0.6429
INFO:train:Epoch 21/1000 	Train Loss: 0.2453, Train Acc: 0.9910	 Val Loss: 0.8238, Val Acc: 0.6786
INFO:train:Epoch 22/1000 	Train Loss: 0.2361, Train Acc: 0.9955	 Val Loss: 0.7507, Val Acc: 0.7143
INFO:train:Epoch 23/1000 	Train Loss: 0.2270, Train Acc: 1.0000	 Val Loss: 0.7467, Val Acc: 0.7321
INFO:train:Epoch 24/1000 	Train Loss: 0.2191, Train Acc: 1.0000	 Val Loss: 0.7665, Val Acc: 0.6607
INFO:train:Epoch 25/1000 	Train Loss: 0.2204, Train Acc: 1.0000	 Val Loss: 0.7858, Val Acc: 0.6786
INFO:train:Epoch 26/1000 	Train Loss: 0.2169, Train Acc: 1.0000	 Val Loss: 0.8122, Val Acc: 0.7321
INFO:train:Epoch 27/1000 	Train Loss: 0.2191, Train Acc: 1.0000	 Val Loss: 0.7809, Val Acc: 0.6964
INFO:train:Epoch 28/1000 	Train Loss: 0.2147, Train Acc: 1.0000	 Val Loss: 0.7545, Val Acc: 0.6786
INFO:train:Epoch 29/1000 	Train Loss: 0.2132, Train Acc: 1.0000	 Val Loss: 0.7156, Val Acc: 0.6964
INFO:train:Epoch 30/1000 	Train Loss: 0.2159, Train Acc: 1.0000	 Val Loss: 0.7563, Val Acc: 0.6786
INFO:train:Epoch 31/1000 	Train Loss: 0.2151, Train Acc: 1.0000	 Val Loss: 0.7765, Val Acc: 0.6607
INFO:train:Epoch 32/1000 	Train Loss: 0.2115, Train Acc: 1.0000	 Val Loss: 0.7802, Val Acc: 0.6964
INFO:train:Epoch 33/1000 	Train Loss: 0.2121, Train Acc: 1.0000	 Val Loss: 0.7719, Val Acc: 0.6964
INFO:train:Early stopping triggered after 33 epochs
INFO:plot:Saving attention map to: figures/model_accuracy.png
INFO:__main__:Total time taken to train the model: 48.47s
INFO:train:train got 64 / 64 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:train:train got 64 / 64 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:train:train got 64 / 64 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:train:train got 30 / 30 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:train:Total time taken evaluate on train set the model: 0.82s
INFO:train:validation got 39 / 56 correct, accuracy: 0.6964285714285714
INFO:plot:Saving cofusion matrix map to: figures/validation_confusion_matrix.png
INFO:train:Total time taken evaluate on validation set the model: 0.20s
INFO:plot:Saving attention map to: figures/encoder_attention_map.png
INFO:plot:Saving attention map to: figures/decoder_attention_map.png
