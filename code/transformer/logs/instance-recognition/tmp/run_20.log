INFO:__main__:Reading the dataset: fish instance-recognition
INFO:__main__:model: Transformer(
  (encoder): Encoder(
    (layers): ModuleList(
      (0-3): 4 x EncoderLayer(
        (self_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (feed_forward): FeedForward(
          (fc1): Linear(in_features=2046, out_features=128, bias=True)
          (fc2): Linear(in_features=128, out_features=2046, bias=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
        (norm1): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.2, inplace=False)
        (dropout2): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (decoder): Decoder(
    (layers): ModuleList(
      (0-3): 4 x DecoderLayer(
        (self_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (cross_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (feed_forward): FeedForward(
          (fc1): Linear(in_features=2046, out_features=128, bias=True)
          (fc2): Linear(in_features=128, out_features=2046, bias=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
        (norm1): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.2, inplace=False)
        (dropout2): Dropout(p=0.2, inplace=False)
        (dropout3): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (fc): Linear(in_features=2046, out_features=2, bias=True)
)
INFO:__main__:Training the network
INFO:train:Epoch 1/1000 	Train Loss: 0.8462, Train Acc: 0.4464	 Val Loss: 6.5337, Val Acc: 0.4667
INFO:train:Epoch 2/1000 	Train Loss: 1.9764, Train Acc: 0.7500	 Val Loss: 3.8826, Val Acc: 0.4667
INFO:train:Epoch 3/1000 	Train Loss: 1.3078, Train Acc: 0.7143	 Val Loss: 1.5503, Val Acc: 0.6667
INFO:train:Epoch 4/1000 	Train Loss: 1.8209, Train Acc: 0.6071	 Val Loss: 3.2394, Val Acc: 0.6000
INFO:train:Epoch 5/1000 	Train Loss: 0.7737, Train Acc: 0.8393	 Val Loss: 4.0569, Val Acc: 0.5333
INFO:train:Epoch 6/1000 	Train Loss: 0.5273, Train Acc: 0.9643	 Val Loss: 3.3345, Val Acc: 0.5333
INFO:train:Epoch 7/1000 	Train Loss: 0.6154, Train Acc: 0.9464	 Val Loss: 1.9790, Val Acc: 0.6667
INFO:train:Epoch 8/1000 	Train Loss: 0.5498, Train Acc: 0.9821	 Val Loss: 1.3179, Val Acc: 0.7333
INFO:train:Epoch 9/1000 	Train Loss: 0.4065, Train Acc: 0.9821	 Val Loss: 1.0595, Val Acc: 0.7333
INFO:train:Epoch 10/1000 	Train Loss: 0.4079, Train Acc: 0.8929	 Val Loss: 1.0664, Val Acc: 0.6667
INFO:train:Epoch 11/1000 	Train Loss: 0.3622, Train Acc: 0.9286	 Val Loss: 1.2969, Val Acc: 0.5333
INFO:train:Epoch 12/1000 	Train Loss: 0.3336, Train Acc: 0.9107	 Val Loss: 1.4261, Val Acc: 0.5333
INFO:train:Epoch 13/1000 	Train Loss: 0.2852, Train Acc: 1.0000	 Val Loss: 1.6228, Val Acc: 0.5333
INFO:train:Epoch 14/1000 	Train Loss: 0.2692, Train Acc: 1.0000	 Val Loss: 1.7079, Val Acc: 0.5333
INFO:train:Epoch 15/1000 	Train Loss: 0.2699, Train Acc: 1.0000	 Val Loss: 1.6706, Val Acc: 0.6000
INFO:train:Epoch 16/1000 	Train Loss: 0.2843, Train Acc: 1.0000	 Val Loss: 1.5578, Val Acc: 0.5333
INFO:train:Epoch 17/1000 	Train Loss: 0.2655, Train Acc: 1.0000	 Val Loss: 1.4314, Val Acc: 0.3333
INFO:train:Epoch 18/1000 	Train Loss: 0.2665, Train Acc: 1.0000	 Val Loss: 1.4566, Val Acc: 0.4000
INFO:train:Epoch 19/1000 	Train Loss: 0.2530, Train Acc: 0.9821	 Val Loss: 1.3117, Val Acc: 0.4000
INFO:train:Epoch 20/1000 	Train Loss: 0.2741, Train Acc: 0.9643	 Val Loss: 1.1675, Val Acc: 0.4667
INFO:train:Epoch 21/1000 	Train Loss: 0.2524, Train Acc: 1.0000	 Val Loss: 1.1793, Val Acc: 0.5333
INFO:train:Epoch 22/1000 	Train Loss: 0.2380, Train Acc: 1.0000	 Val Loss: 1.2091, Val Acc: 0.6000
INFO:train:Epoch 23/1000 	Train Loss: 0.2392, Train Acc: 1.0000	 Val Loss: 1.1948, Val Acc: 0.5333
INFO:train:Epoch 24/1000 	Train Loss: 0.2279, Train Acc: 1.0000	 Val Loss: 1.1473, Val Acc: 0.6000
INFO:train:Epoch 25/1000 	Train Loss: 0.2244, Train Acc: 1.0000	 Val Loss: 1.1684, Val Acc: 0.5333
INFO:train:Epoch 26/1000 	Train Loss: 0.2197, Train Acc: 1.0000	 Val Loss: 1.2142, Val Acc: 0.5333
INFO:train:Epoch 27/1000 	Train Loss: 0.2205, Train Acc: 1.0000	 Val Loss: 1.2440, Val Acc: 0.5333
INFO:train:Epoch 28/1000 	Train Loss: 0.2238, Train Acc: 1.0000	 Val Loss: 1.2733, Val Acc: 0.6000
INFO:train:Epoch 29/1000 	Train Loss: 0.2238, Train Acc: 1.0000	 Val Loss: 1.3523, Val Acc: 0.5333
INFO:train:Epoch 30/1000 	Train Loss: 0.2196, Train Acc: 1.0000	 Val Loss: 1.3984, Val Acc: 0.5333
INFO:train:Early stopping triggered after 30 epochs
INFO:plot:Saving attention map to: figures/model_accuracy.png
INFO:__main__:Total time taken to train the model: 13.18s
INFO:train:train got 56 / 56 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:train:Total time taken evaluate on train set the model: 0.19s
INFO:train:validation got 8 / 15 correct, accuracy: 0.5333333333333333
INFO:plot:Saving cofusion matrix map to: figures/validation_confusion_matrix.png
INFO:train:Total time taken evaluate on validation set the model: 0.09s
INFO:plot:Saving attention map to: figures/encoder_attention_map.png
INFO:plot:Saving attention map to: figures/decoder_attention_map.png
