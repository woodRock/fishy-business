INFO:__main__:Reading the dataset: fish instance-recognition
INFO:__main__:model: Transformer(
  (encoder): Encoder(
    (layers): ModuleList(
      (0-3): 4 x EncoderLayer(
        (self_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (feed_forward): FeedForward(
          (fc1): Linear(in_features=2046, out_features=128, bias=True)
          (fc2): Linear(in_features=128, out_features=2046, bias=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
        (norm1): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.2, inplace=False)
        (dropout2): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (decoder): Decoder(
    (layers): ModuleList(
      (0-3): 4 x DecoderLayer(
        (self_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (cross_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (feed_forward): FeedForward(
          (fc1): Linear(in_features=2046, out_features=128, bias=True)
          (fc2): Linear(in_features=128, out_features=2046, bias=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
        (norm1): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.2, inplace=False)
        (dropout2): Dropout(p=0.2, inplace=False)
        (dropout3): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (fc): Linear(in_features=2046, out_features=2, bias=True)
)
INFO:__main__:Training the network
INFO:train:Epoch 1/1000 	Train Loss: 4.1024, Train Acc: 0.5090	 Val Loss: 7.1038, Val Acc: 0.4107
INFO:train:Epoch 2/1000 	Train Loss: 3.9631, Train Acc: 0.4369	 Val Loss: 1.2417, Val Acc: 0.5179
INFO:train:Epoch 3/1000 	Train Loss: 1.0201, Train Acc: 0.6351	 Val Loss: 0.8916, Val Acc: 0.6786
INFO:train:Epoch 4/1000 	Train Loss: 0.7403, Train Acc: 0.7117	 Val Loss: 0.8159, Val Acc: 0.6964
INFO:train:Epoch 5/1000 	Train Loss: 0.6228, Train Acc: 0.7432	 Val Loss: 1.3026, Val Acc: 0.4643
INFO:train:Epoch 6/1000 	Train Loss: 0.5563, Train Acc: 0.7748	 Val Loss: 1.1791, Val Acc: 0.6429
INFO:train:Epoch 7/1000 	Train Loss: 0.7934, Train Acc: 0.7477	 Val Loss: 1.3897, Val Acc: 0.5179
INFO:train:Epoch 8/1000 	Train Loss: 0.4690, Train Acc: 0.8604	 Val Loss: 0.8387, Val Acc: 0.6964
INFO:train:Epoch 9/1000 	Train Loss: 0.4395, Train Acc: 0.8468	 Val Loss: 0.8413, Val Acc: 0.6786
INFO:train:Epoch 10/1000 	Train Loss: 0.4179, Train Acc: 0.8964	 Val Loss: 1.1764, Val Acc: 0.5714
INFO:train:Epoch 11/1000 	Train Loss: 0.3778, Train Acc: 0.9054	 Val Loss: 0.9864, Val Acc: 0.6071
INFO:train:Epoch 12/1000 	Train Loss: 0.3192, Train Acc: 0.9505	 Val Loss: 0.8520, Val Acc: 0.6964
INFO:train:Epoch 13/1000 	Train Loss: 0.2700, Train Acc: 0.9865	 Val Loss: 1.0390, Val Acc: 0.6250
INFO:train:Epoch 14/1000 	Train Loss: 0.2770, Train Acc: 0.9865	 Val Loss: 1.0222, Val Acc: 0.5893
INFO:train:Epoch 15/1000 	Train Loss: 0.2667, Train Acc: 0.9820	 Val Loss: 0.7487, Val Acc: 0.7143
INFO:train:Epoch 16/1000 	Train Loss: 0.2588, Train Acc: 0.9865	 Val Loss: 0.8456, Val Acc: 0.7679
INFO:train:Epoch 17/1000 	Train Loss: 0.2691, Train Acc: 0.9730	 Val Loss: 0.8385, Val Acc: 0.7143
INFO:train:Epoch 18/1000 	Train Loss: 0.2542, Train Acc: 0.9820	 Val Loss: 0.8634, Val Acc: 0.6964
INFO:train:Epoch 19/1000 	Train Loss: 0.2499, Train Acc: 0.9865	 Val Loss: 0.9326, Val Acc: 0.6429
INFO:train:Epoch 20/1000 	Train Loss: 0.2406, Train Acc: 0.9955	 Val Loss: 0.8792, Val Acc: 0.6607
INFO:train:Epoch 21/1000 	Train Loss: 0.2363, Train Acc: 1.0000	 Val Loss: 0.6924, Val Acc: 0.6964
INFO:train:Epoch 22/1000 	Train Loss: 0.2269, Train Acc: 1.0000	 Val Loss: 0.7945, Val Acc: 0.6250
INFO:train:Epoch 23/1000 	Train Loss: 0.2249, Train Acc: 1.0000	 Val Loss: 0.7374, Val Acc: 0.6786
INFO:train:Epoch 24/1000 	Train Loss: 0.2231, Train Acc: 0.9955	 Val Loss: 0.7671, Val Acc: 0.5893
INFO:train:Epoch 25/1000 	Train Loss: 0.2242, Train Acc: 1.0000	 Val Loss: 0.8171, Val Acc: 0.6786
INFO:train:Epoch 26/1000 	Train Loss: 0.2250, Train Acc: 1.0000	 Val Loss: 0.7618, Val Acc: 0.6250
INFO:train:Epoch 27/1000 	Train Loss: 0.2174, Train Acc: 1.0000	 Val Loss: 0.9248, Val Acc: 0.5714
INFO:train:Epoch 28/1000 	Train Loss: 0.2186, Train Acc: 1.0000	 Val Loss: 0.7390, Val Acc: 0.5893
INFO:train:Epoch 29/1000 	Train Loss: 0.2152, Train Acc: 1.0000	 Val Loss: 0.8389, Val Acc: 0.6250
INFO:train:Epoch 30/1000 	Train Loss: 0.2185, Train Acc: 1.0000	 Val Loss: 0.7913, Val Acc: 0.5714
INFO:train:Epoch 31/1000 	Train Loss: 0.2181, Train Acc: 1.0000	 Val Loss: 0.8235, Val Acc: 0.5893
INFO:train:Epoch 32/1000 	Train Loss: 0.2198, Train Acc: 1.0000	 Val Loss: 0.7764, Val Acc: 0.6071
INFO:train:Epoch 33/1000 	Train Loss: 0.2176, Train Acc: 1.0000	 Val Loss: 0.7841, Val Acc: 0.6429
INFO:train:Epoch 34/1000 	Train Loss: 0.2126, Train Acc: 1.0000	 Val Loss: 0.7965, Val Acc: 0.6250
INFO:train:Early stopping triggered after 34 epochs
INFO:plot:Saving attention map to: figures/model_accuracy.png
INFO:__main__:Total time taken to train the model: 50.06s
INFO:train:train got 64 / 64 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:train:train got 64 / 64 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:train:train got 64 / 64 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:train:train got 30 / 30 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:train:Total time taken evaluate on train set the model: 0.81s
INFO:train:validation got 33 / 56 correct, accuracy: 0.5892857142857143
INFO:plot:Saving cofusion matrix map to: figures/validation_confusion_matrix.png
INFO:train:Total time taken evaluate on validation set the model: 0.19s
INFO:plot:Saving attention map to: figures/encoder_attention_map.png
INFO:plot:Saving attention map to: figures/decoder_attention_map.png
