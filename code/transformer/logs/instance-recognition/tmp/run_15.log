INFO:__main__:Reading the dataset: fish instance-recognition
INFO:__main__:model: Transformer(
  (encoder): Encoder(
    (layers): ModuleList(
      (0-3): 4 x EncoderLayer(
        (self_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (feed_forward): FeedForward(
          (fc1): Linear(in_features=2046, out_features=128, bias=True)
          (fc2): Linear(in_features=128, out_features=2046, bias=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
        (norm1): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.2, inplace=False)
        (dropout2): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (decoder): Decoder(
    (layers): ModuleList(
      (0-3): 4 x DecoderLayer(
        (self_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (cross_attention): MultiHeadAttention(
          (query): Linear(in_features=2046, out_features=2046, bias=True)
          (key): Linear(in_features=2046, out_features=2046, bias=True)
          (value): Linear(in_features=2046, out_features=2046, bias=True)
          (fc_out): Linear(in_features=2046, out_features=2046, bias=True)
        )
        (feed_forward): FeedForward(
          (fc1): Linear(in_features=2046, out_features=128, bias=True)
          (fc2): Linear(in_features=128, out_features=2046, bias=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
        (norm1): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((2046,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.2, inplace=False)
        (dropout2): Dropout(p=0.2, inplace=False)
        (dropout3): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (fc): Linear(in_features=2046, out_features=2, bias=True)
)
INFO:__main__:Training the network
INFO:train:Epoch 1/1000 	Train Loss: 1.0614, Train Acc: 0.3036	 Val Loss: 5.6195, Val Acc: 0.7333
INFO:train:Epoch 2/1000 	Train Loss: 4.3877, Train Acc: 0.7500	 Val Loss: 1.0645, Val Acc: 0.6667
INFO:train:Epoch 3/1000 	Train Loss: 0.8539, Train Acc: 0.8214	 Val Loss: 3.0613, Val Acc: 0.5333
INFO:train:Epoch 4/1000 	Train Loss: 2.3194, Train Acc: 0.5893	 Val Loss: 1.0381, Val Acc: 0.8000
INFO:train:Epoch 5/1000 	Train Loss: 0.6750, Train Acc: 0.8393	 Val Loss: 1.8097, Val Acc: 0.6667
INFO:train:Epoch 6/1000 	Train Loss: 0.7309, Train Acc: 0.6964	 Val Loss: 0.8804, Val Acc: 0.7333
INFO:train:Epoch 7/1000 	Train Loss: 0.4547, Train Acc: 0.9107	 Val Loss: 0.5662, Val Acc: 0.8667
INFO:train:Epoch 8/1000 	Train Loss: 0.4599, Train Acc: 0.8929	 Val Loss: 1.0465, Val Acc: 0.7333
INFO:train:Epoch 9/1000 	Train Loss: 0.4152, Train Acc: 0.9643	 Val Loss: 1.1679, Val Acc: 0.7333
INFO:train:Epoch 10/1000 	Train Loss: 0.3906, Train Acc: 0.9464	 Val Loss: 0.8505, Val Acc: 0.8000
INFO:train:Epoch 11/1000 	Train Loss: 0.3215, Train Acc: 0.9821	 Val Loss: 0.5876, Val Acc: 0.6667
INFO:train:Epoch 12/1000 	Train Loss: 0.2743, Train Acc: 1.0000	 Val Loss: 0.6472, Val Acc: 0.6667
INFO:train:Epoch 13/1000 	Train Loss: 0.3558, Train Acc: 0.9107	 Val Loss: 0.5847, Val Acc: 0.8000
INFO:train:Epoch 14/1000 	Train Loss: 0.2828, Train Acc: 1.0000	 Val Loss: 0.6060, Val Acc: 0.8667
INFO:train:Epoch 15/1000 	Train Loss: 0.2790, Train Acc: 1.0000	 Val Loss: 0.6206, Val Acc: 0.8000
INFO:train:Epoch 16/1000 	Train Loss: 0.2578, Train Acc: 1.0000	 Val Loss: 0.6266, Val Acc: 0.7333
INFO:train:Epoch 17/1000 	Train Loss: 0.2517, Train Acc: 1.0000	 Val Loss: 0.6144, Val Acc: 0.7333
INFO:train:Epoch 18/1000 	Train Loss: 0.2665, Train Acc: 1.0000	 Val Loss: 0.6258, Val Acc: 0.7333
INFO:train:Epoch 19/1000 	Train Loss: 0.2465, Train Acc: 1.0000	 Val Loss: 0.6324, Val Acc: 0.7333
INFO:train:Epoch 20/1000 	Train Loss: 0.2462, Train Acc: 1.0000	 Val Loss: 0.6035, Val Acc: 0.7333
INFO:train:Epoch 21/1000 	Train Loss: 0.2442, Train Acc: 0.9821	 Val Loss: 0.5049, Val Acc: 0.7333
INFO:train:Epoch 22/1000 	Train Loss: 0.2309, Train Acc: 1.0000	 Val Loss: 0.4621, Val Acc: 0.8000
INFO:train:Epoch 23/1000 	Train Loss: 0.2300, Train Acc: 1.0000	 Val Loss: 0.4989, Val Acc: 0.8000
INFO:train:Epoch 24/1000 	Train Loss: 0.2270, Train Acc: 1.0000	 Val Loss: 0.5517, Val Acc: 0.8000
INFO:train:Epoch 25/1000 	Train Loss: 0.2273, Train Acc: 1.0000	 Val Loss: 0.5443, Val Acc: 0.8000
INFO:train:Epoch 26/1000 	Train Loss: 0.2198, Train Acc: 1.0000	 Val Loss: 0.5049, Val Acc: 0.8000
INFO:train:Epoch 27/1000 	Train Loss: 0.2206, Train Acc: 1.0000	 Val Loss: 0.4599, Val Acc: 0.8000
INFO:train:Epoch 28/1000 	Train Loss: 0.2238, Train Acc: 1.0000	 Val Loss: 0.4282, Val Acc: 0.8000
INFO:train:Epoch 29/1000 	Train Loss: 0.2318, Train Acc: 1.0000	 Val Loss: 0.4496, Val Acc: 0.8667
INFO:train:Epoch 30/1000 	Train Loss: 0.2279, Train Acc: 1.0000	 Val Loss: 0.4891, Val Acc: 0.8667
INFO:train:Epoch 31/1000 	Train Loss: 0.2174, Train Acc: 1.0000	 Val Loss: 0.5336, Val Acc: 0.8667
INFO:train:Early stopping triggered after 31 epochs
INFO:plot:Saving attention map to: figures/model_accuracy.png
INFO:__main__:Total time taken to train the model: 13.73s
INFO:train:train got 56 / 56 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:train:Total time taken evaluate on train set the model: 0.21s
INFO:train:validation got 13 / 15 correct, accuracy: 0.8666666666666667
INFO:plot:Saving cofusion matrix map to: figures/validation_confusion_matrix.png
INFO:train:Total time taken evaluate on validation set the model: 0.09s
INFO:plot:Saving attention map to: figures/encoder_attention_map.png
INFO:plot:Saving attention map to: figures/decoder_attention_map.png
