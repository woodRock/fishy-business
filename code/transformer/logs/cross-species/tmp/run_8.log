INFO:__main__:Reading the dataset: fish cross-species
INFO:__main__:model: Transformer(
  (encoder): Encoder(
    (layers): ModuleList(
      (0-2): 3 x EncoderLayer(
        (self_attention): MultiHeadAttention(
          (query): Linear(in_features=1023, out_features=1023, bias=True)
          (key): Linear(in_features=1023, out_features=1023, bias=True)
          (value): Linear(in_features=1023, out_features=1023, bias=True)
          (fc_out): Linear(in_features=1023, out_features=1023, bias=True)
        )
        (feed_forward): FeedForward(
          (fc1): Linear(in_features=1023, out_features=64, bias=True)
          (fc2): Linear(in_features=64, out_features=1023, bias=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
        (norm1): LayerNorm((1023,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((1023,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.2, inplace=False)
        (dropout2): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (decoder): Decoder(
    (layers): ModuleList(
      (0-2): 3 x DecoderLayer(
        (self_attention): MultiHeadAttention(
          (query): Linear(in_features=1023, out_features=1023, bias=True)
          (key): Linear(in_features=1023, out_features=1023, bias=True)
          (value): Linear(in_features=1023, out_features=1023, bias=True)
          (fc_out): Linear(in_features=1023, out_features=1023, bias=True)
        )
        (cross_attention): MultiHeadAttention(
          (query): Linear(in_features=1023, out_features=1023, bias=True)
          (key): Linear(in_features=1023, out_features=1023, bias=True)
          (value): Linear(in_features=1023, out_features=1023, bias=True)
          (fc_out): Linear(in_features=1023, out_features=1023, bias=True)
        )
        (feed_forward): FeedForward(
          (fc1): Linear(in_features=1023, out_features=64, bias=True)
          (fc2): Linear(in_features=64, out_features=1023, bias=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
        (norm1): LayerNorm((1023,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((1023,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((1023,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.2, inplace=False)
        (dropout2): Dropout(p=0.2, inplace=False)
        (dropout3): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (fc): Linear(in_features=1023, out_features=1023, bias=True)
)
INFO:__main__:Pre-training the network: Masked Spectra Modelling
INFO:pre_training:Epoch [1/100], Loss: 0.0853, Val: 0.0055
INFO:pre_training:Epoch [2/100], Loss: 0.0683, Val: 0.0047
INFO:pre_training:Epoch [3/100], Loss: 0.0585, Val: 0.0040
INFO:pre_training:Epoch [4/100], Loss: 0.0517, Val: 0.0036
INFO:pre_training:Epoch [5/100], Loss: 0.0467, Val: 0.0033
INFO:pre_training:Epoch [6/100], Loss: 0.0432, Val: 0.0029
INFO:pre_training:Epoch [7/100], Loss: 0.0404, Val: 0.0028
INFO:pre_training:Epoch [8/100], Loss: 0.0384, Val: 0.0028
INFO:pre_training:Epoch [9/100], Loss: 0.0366, Val: 0.0026
INFO:pre_training:Epoch [10/100], Loss: 0.0348, Val: 0.0025
INFO:pre_training:Epoch [11/100], Loss: 0.0337, Val: 0.0025
INFO:pre_training:Epoch [12/100], Loss: 0.0323, Val: 0.0024
INFO:pre_training:Epoch [13/100], Loss: 0.0311, Val: 0.0024
INFO:pre_training:Epoch [14/100], Loss: 0.0302, Val: 0.0023
INFO:pre_training:Epoch [15/100], Loss: 0.0293, Val: 0.0022
INFO:pre_training:Epoch [16/100], Loss: 0.0283, Val: 0.0022
INFO:pre_training:Epoch [17/100], Loss: 0.0275, Val: 0.0022
INFO:pre_training:Epoch [18/100], Loss: 0.0268, Val: 0.0021
INFO:pre_training:Epoch [19/100], Loss: 0.0261, Val: 0.0021
INFO:pre_training:Epoch [20/100], Loss: 0.0254, Val: 0.0021
INFO:pre_training:Epoch [21/100], Loss: 0.0247, Val: 0.0020
INFO:pre_training:Epoch [22/100], Loss: 0.0241, Val: 0.0020
INFO:pre_training:Epoch [23/100], Loss: 0.0235, Val: 0.0019
INFO:pre_training:Epoch [24/100], Loss: 0.0230, Val: 0.0019
INFO:pre_training:Epoch [25/100], Loss: 0.0225, Val: 0.0019
INFO:pre_training:Epoch [26/100], Loss: 0.0220, Val: 0.0019
INFO:pre_training:Epoch [27/100], Loss: 0.0215, Val: 0.0018
INFO:pre_training:Epoch [28/100], Loss: 0.0210, Val: 0.0018
INFO:pre_training:Epoch [29/100], Loss: 0.0206, Val: 0.0018
INFO:pre_training:Epoch [30/100], Loss: 0.0202, Val: 0.0018
INFO:pre_training:Epoch [31/100], Loss: 0.0197, Val: 0.0017
INFO:pre_training:Epoch [32/100], Loss: 0.0193, Val: 0.0017
INFO:pre_training:Epoch [33/100], Loss: 0.0189, Val: 0.0017
INFO:pre_training:Epoch [34/100], Loss: 0.0185, Val: 0.0017
INFO:pre_training:Epoch [35/100], Loss: 0.0182, Val: 0.0017
INFO:pre_training:Epoch [36/100], Loss: 0.0179, Val: 0.0017
INFO:pre_training:Epoch [37/100], Loss: 0.0176, Val: 0.0016
INFO:pre_training:Epoch [38/100], Loss: 0.0173, Val: 0.0016
INFO:pre_training:Epoch [39/100], Loss: 0.0169, Val: 0.0016
INFO:pre_training:Epoch [40/100], Loss: 0.0166, Val: 0.0015
INFO:pre_training:Epoch [41/100], Loss: 0.0163, Val: 0.0015
INFO:pre_training:Epoch [42/100], Loss: 0.0160, Val: 0.0015
INFO:pre_training:Epoch [43/100], Loss: 0.0158, Val: 0.0016
INFO:pre_training:Epoch [44/100], Loss: 0.0155, Val: 0.0015
INFO:pre_training:Epoch [45/100], Loss: 0.0153, Val: 0.0015
INFO:pre_training:Epoch [46/100], Loss: 0.0150, Val: 0.0015
INFO:pre_training:Epoch [47/100], Loss: 0.0148, Val: 0.0015
INFO:pre_training:Epoch [48/100], Loss: 0.0145, Val: 0.0015
INFO:pre_training:Epoch [49/100], Loss: 0.0143, Val: 0.0014
INFO:pre_training:Epoch [50/100], Loss: 0.0141, Val: 0.0014
INFO:pre_training:Epoch [51/100], Loss: 0.0138, Val: 0.0014
INFO:pre_training:Epoch [52/100], Loss: 0.0136, Val: 0.0014
INFO:pre_training:Epoch [53/100], Loss: 0.0134, Val: 0.0014
INFO:pre_training:Epoch [54/100], Loss: 0.0132, Val: 0.0014
INFO:pre_training:Epoch [55/100], Loss: 0.0130, Val: 0.0014
INFO:pre_training:Epoch [56/100], Loss: 0.0128, Val: 0.0014
INFO:pre_training:Epoch [57/100], Loss: 0.0127, Val: 0.0014
INFO:pre_training:Epoch [58/100], Loss: 0.0124, Val: 0.0014
INFO:pre_training:Epoch [59/100], Loss: 0.0123, Val: 0.0013
INFO:pre_training:Epoch [60/100], Loss: 0.0121, Val: 0.0013
INFO:pre_training:Epoch [61/100], Loss: 0.0119, Val: 0.0013
INFO:pre_training:Epoch [62/100], Loss: 0.0117, Val: 0.0013
INFO:pre_training:Epoch [63/100], Loss: 0.0116, Val: 0.0013
INFO:pre_training:Epoch [64/100], Loss: 0.0114, Val: 0.0013
INFO:pre_training:Epoch [65/100], Loss: 0.0112, Val: 0.0013
INFO:pre_training:Epoch [66/100], Loss: 0.0111, Val: 0.0013
INFO:pre_training:Epoch [67/100], Loss: 0.0110, Val: 0.0013
INFO:pre_training:Epoch [68/100], Loss: 0.0108, Val: 0.0013
INFO:pre_training:Epoch [69/100], Loss: 0.0107, Val: 0.0013
INFO:pre_training:Epoch [70/100], Loss: 0.0106, Val: 0.0013
INFO:pre_training:Epoch [71/100], Loss: 0.0104, Val: 0.0013
INFO:pre_training:Epoch [72/100], Loss: 0.0103, Val: 0.0012
INFO:pre_training:Epoch [73/100], Loss: 0.0101, Val: 0.0013
INFO:pre_training:Epoch [74/100], Loss: 0.0100, Val: 0.0012
INFO:pre_training:Epoch [75/100], Loss: 0.0098, Val: 0.0012
INFO:pre_training:Epoch [76/100], Loss: 0.0097, Val: 0.0012
INFO:pre_training:Epoch [77/100], Loss: 0.0096, Val: 0.0012
INFO:pre_training:Epoch [78/100], Loss: 0.0095, Val: 0.0012
INFO:pre_training:Epoch [79/100], Loss: 0.0093, Val: 0.0012
INFO:pre_training:Epoch [80/100], Loss: 0.0093, Val: 0.0012
INFO:pre_training:Epoch [81/100], Loss: 0.0092, Val: 0.0012
INFO:pre_training:Epoch [82/100], Loss: 0.0091, Val: 0.0012
INFO:pre_training:Epoch [83/100], Loss: 0.0090, Val: 0.0012
INFO:pre_training:Epoch [84/100], Loss: 0.0088, Val: 0.0012
INFO:pre_training:Epoch [85/100], Loss: 0.0087, Val: 0.0012
INFO:pre_training:Epoch [86/100], Loss: 0.0086, Val: 0.0012
INFO:pre_training:Epoch [87/100], Loss: 0.0085, Val: 0.0011
INFO:pre_training:Epoch [88/100], Loss: 0.0084, Val: 0.0012
INFO:pre_training:Epoch [89/100], Loss: 0.0083, Val: 0.0012
INFO:pre_training:Epoch [90/100], Loss: 0.0082, Val: 0.0012
INFO:pre_training:Epoch [91/100], Loss: 0.0081, Val: 0.0011
INFO:pre_training:Epoch [92/100], Loss: 0.0081, Val: 0.0012
INFO:pre_training:Epoch [93/100], Loss: 0.0080, Val: 0.0011
INFO:pre_training:Epoch [94/100], Loss: 0.0079, Val: 0.0012
INFO:pre_training:Epoch [95/100], Loss: 0.0078, Val: 0.0011
INFO:pre_training:Epoch [96/100], Loss: 0.0077, Val: 0.0011
INFO:pre_training:Epoch [97/100], Loss: 0.0076, Val: 0.0012
INFO:pre_training:Epoch [98/100], Loss: 0.0075, Val: 0.0011
INFO:pre_training:Epoch [99/100], Loss: 0.0074, Val: 0.0011
INFO:pre_training:Epoch [100/100], Loss: 0.0074, Val: 0.0011
INFO:__main__:Total time taken to pre-train the model: 177.17s
INFO:__main__:model: Transformer(
  (encoder): Encoder(
    (layers): ModuleList(
      (0-2): 3 x EncoderLayer(
        (self_attention): MultiHeadAttention(
          (query): Linear(in_features=1023, out_features=1023, bias=True)
          (key): Linear(in_features=1023, out_features=1023, bias=True)
          (value): Linear(in_features=1023, out_features=1023, bias=True)
          (fc_out): Linear(in_features=1023, out_features=1023, bias=True)
        )
        (feed_forward): FeedForward(
          (fc1): Linear(in_features=1023, out_features=64, bias=True)
          (fc2): Linear(in_features=64, out_features=1023, bias=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
        (norm1): LayerNorm((1023,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((1023,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.2, inplace=False)
        (dropout2): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (decoder): Decoder(
    (layers): ModuleList(
      (0-2): 3 x DecoderLayer(
        (self_attention): MultiHeadAttention(
          (query): Linear(in_features=1023, out_features=1023, bias=True)
          (key): Linear(in_features=1023, out_features=1023, bias=True)
          (value): Linear(in_features=1023, out_features=1023, bias=True)
          (fc_out): Linear(in_features=1023, out_features=1023, bias=True)
        )
        (cross_attention): MultiHeadAttention(
          (query): Linear(in_features=1023, out_features=1023, bias=True)
          (key): Linear(in_features=1023, out_features=1023, bias=True)
          (value): Linear(in_features=1023, out_features=1023, bias=True)
          (fc_out): Linear(in_features=1023, out_features=1023, bias=True)
        )
        (feed_forward): FeedForward(
          (fc1): Linear(in_features=1023, out_features=64, bias=True)
          (fc2): Linear(in_features=64, out_features=1023, bias=True)
          (dropout): Dropout(p=0.2, inplace=False)
        )
        (norm1): LayerNorm((1023,), eps=1e-05, elementwise_affine=True)
        (norm2): LayerNorm((1023,), eps=1e-05, elementwise_affine=True)
        (norm3): LayerNorm((1023,), eps=1e-05, elementwise_affine=True)
        (dropout1): Dropout(p=0.2, inplace=False)
        (dropout2): Dropout(p=0.2, inplace=False)
        (dropout3): Dropout(p=0.2, inplace=False)
      )
    )
  )
  (fc): Linear(in_features=1023, out_features=3, bias=True)
)
INFO:__main__:Training the network
INFO:train:Epoch 1/100, Train Loss: 1.0966, Train Acc: 0.3866, Val Loss: 1.0904, Val Acc: 0.4000
INFO:train:Epoch 2/100, Train Loss: 1.0884, Train Acc: 0.3934, Val Loss: 1.0772, Val Acc: 0.4000
INFO:train:Epoch 3/100, Train Loss: 1.0698, Train Acc: 0.4057, Val Loss: 1.0417, Val Acc: 0.4000
INFO:train:Epoch 4/100, Train Loss: 1.0054, Train Acc: 0.5287, Val Loss: 0.9411, Val Acc: 0.6000
INFO:train:Epoch 5/100, Train Loss: 0.8341, Train Acc: 0.7104, Val Loss: 0.7904, Val Acc: 0.6000
INFO:train:Epoch 6/100, Train Loss: 0.6859, Train Acc: 0.7199, Val Loss: 0.7339, Val Acc: 0.6000
INFO:train:Epoch 7/100, Train Loss: 0.6107, Train Acc: 0.7978, Val Loss: 0.6885, Val Acc: 0.6000
INFO:train:Epoch 8/100, Train Loss: 0.5333, Train Acc: 0.9071, Val Loss: 0.6835, Val Acc: 0.6667
INFO:train:Epoch 9/100, Train Loss: 0.4649, Train Acc: 0.9467, Val Loss: 0.7214, Val Acc: 0.7333
INFO:train:Epoch 10/100, Train Loss: 0.3864, Train Acc: 0.9850, Val Loss: 0.7878, Val Acc: 0.7333
INFO:train:Epoch 11/100, Train Loss: 0.3350, Train Acc: 1.0000, Val Loss: 0.7451, Val Acc: 0.7333
INFO:train:Epoch 12/100, Train Loss: 0.3119, Train Acc: 1.0000, Val Loss: 0.7491, Val Acc: 0.7333
INFO:train:Epoch 13/100, Train Loss: 0.2989, Train Acc: 1.0000, Val Loss: 0.7872, Val Acc: 0.8000
INFO:train:Epoch 14/100, Train Loss: 0.2949, Train Acc: 1.0000, Val Loss: 0.8279, Val Acc: 0.8000
INFO:train:Epoch 15/100, Train Loss: 0.2940, Train Acc: 1.0000, Val Loss: 0.8764, Val Acc: 0.6667
INFO:train:Epoch 16/100, Train Loss: 0.2937, Train Acc: 1.0000, Val Loss: 0.8909, Val Acc: 0.6667
INFO:train:Epoch 17/100, Train Loss: 0.2932, Train Acc: 1.0000, Val Loss: 0.8900, Val Acc: 0.6667
INFO:train:Epoch 18/100, Train Loss: 0.2931, Train Acc: 1.0000, Val Loss: 0.8919, Val Acc: 0.6667
INFO:train:Epoch 19/100, Train Loss: 0.2929, Train Acc: 1.0000, Val Loss: 0.8904, Val Acc: 0.7333
INFO:train:Epoch 20/100, Train Loss: 0.2927, Train Acc: 1.0000, Val Loss: 0.8874, Val Acc: 0.7333
INFO:train:Early stopping
INFO:plot:Saving attention map to: figures/model_accuracy.png
INFO:__main__:Total time taken to train the model: 22.91s
INFO:__main__:train got 62 / 64 correct, accuracy: 0.96875
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:__main__:train got 63 / 64 correct, accuracy: 0.984375
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:__main__:train got 61 / 64 correct, accuracy: 0.953125
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:__main__:train got 62 / 64 correct, accuracy: 0.96875
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:__main__:train got 63 / 64 correct, accuracy: 0.984375
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:__main__:train got 63 / 64 correct, accuracy: 0.984375
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:__main__:train got 63 / 64 correct, accuracy: 0.984375
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:__main__:train got 62 / 64 correct, accuracy: 0.96875
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:__main__:train got 62 / 64 correct, accuracy: 0.96875
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:__main__:train got 62 / 64 correct, accuracy: 0.96875
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:__main__:train got 63 / 64 correct, accuracy: 0.984375
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:__main__:train got 28 / 28 correct, accuracy: 1.0
INFO:plot:Saving cofusion matrix map to: figures/train_confusion_matrix.png
INFO:__main__:validation got 11 / 15 correct, accuracy: 0.7333333333333333
INFO:plot:Saving cofusion matrix map to: figures/validation_confusion_matrix.png
INFO:__main__:test got 15 / 16 correct, accuracy: 0.9375
INFO:plot:Saving cofusion matrix map to: figures/test_confusion_matrix.png
INFO:plot:Saving attention map to: figures/encoder_attention_map.png
INFO:plot:Saving attention map to: figures/decoder_attention_map.png
